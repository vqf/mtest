// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// traverse
List traverse(List l);
RcppExport SEXP _mtest_traverse(SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(traverse(l));
    return rcpp_result_gen;
END_RCPP
}
// sl
NumericMatrix sl(NumericMatrix from);
RcppExport SEXP _mtest_sl(SEXP fromSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type from(fromSEXP);
    rcpp_result_gen = Rcpp::wrap(sl(from));
    return rcpp_result_gen;
END_RCPP
}
// mtest
List mtest(List l, double cutoff, uint8_t rw, uint8_t cl);
RcppExport SEXP _mtest_mtest(SEXP lSEXP, SEXP cutoffSEXP, SEXP rwSEXP, SEXP clSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type l(lSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< uint8_t >::type rw(rwSEXP);
    Rcpp::traits::input_parameter< uint8_t >::type cl(clSEXP);
    rcpp_result_gen = Rcpp::wrap(mtest(l, cutoff, rw, cl));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mtest_traverse", (DL_FUNC) &_mtest_traverse, 1},
    {"_mtest_sl", (DL_FUNC) &_mtest_sl, 1},
    {"_mtest_mtest", (DL_FUNC) &_mtest_mtest, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_mtest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
